float solarVoltage = 0.0;
float batteryVoltage = 0.0;
float avgBatVoltage = 0.0;
float avgSolVoltage = 0.0;
int sampleCount = 0;
int pwmPin = 11;
int pwmDelayTime = 10;
  

void setup()
{
    Serial.begin(9600);
    pinMode(pwmPin,OUTPUT);
}

void loop()
{
    //while loop to add together 10 samples of the voltages for battery & solar
    while (sampleCount < 10) 
    {
      avgBatVoltage += analogRead(A2);
      avgSolVoltage += analogRead(A3);
      sampleCount++;
      delay(10);
    }
    

    /* 
     *  Takes the average of the 10 readings, multiplys it by the 5V ADC ref voltage.
     *  Divide by 1024 because the ADC stores 1024 values of the reference voltage (1/1024) - this is the voltage we're sampling
     *  The actual voltage is then scaled back up by the division factor of the voltage divider. (11.1)
    */

    batteryVoltage = (((float)avgBatVoltage / 10) * 5.0) / 1024.0 * 11.1;
    solarVoltage = (((float)avgSolVoltage / 10) * 5.0) / 1024.0 * 11.1;

    //Conditions to check battery voltage and change duty cycle of pwm signal to MOSFET gate
    if (batteryVoltage > 8)
    {
      analogWrite(pwmPin, 0);
      delay(100);
    }
    else if (batteryVoltage > 7 && batteryVoltage < 7.99)
    {
      analogWrite(pwmPin, 128);
      delay(100);
    }
    else if (batteryVoltage < 6.99)
    {
      analogWrite(pwmPin, 255);
      delay(100);
    }

    //Prints the values to the serial monitor
    Serial.print("Solar Panel: ");
    Serial.print(solarVoltage);
    Serial.println ("V");
    Serial.print("Battery: ");
    Serial.print(batteryVoltage);
    Serial.println ("V");

    //Reset sampling variables ready for the next sample
    sampleCount = 0;
    avgBatVoltage = 0.0;
    avgSolVoltage = 0.0;
}
